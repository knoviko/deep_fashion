Adopting distributed multi processing training
GPU in main worker is 1
GPU in main worker is 0
Use GPU: 0 for training
In the process of multi processing with rank as 0
=> creating model 'resnet50'
GPU setting 0
Updated batch size is 256
Params to learn:
	 module.encoder.layer3.0.conv1.weight
	 module.encoder.layer3.0.bn1.weight
	 module.encoder.layer3.0.bn1.bias
	 module.encoder.layer3.0.conv2.weight
	 module.encoder.layer3.0.bn2.weight
	 module.encoder.layer3.0.bn2.bias
	 module.encoder.layer3.0.conv3.weight
	 module.encoder.layer3.0.bn3.weight
	 module.encoder.layer3.0.bn3.bias
	 module.encoder.layer3.0.downsample.0.weight
	 module.encoder.layer3.0.downsample.1.weight
	 module.encoder.layer3.0.downsample.1.bias
	 module.encoder.layer3.1.conv1.weight
	 module.encoder.layer3.1.bn1.weight
	 module.encoder.layer3.1.bn1.bias
	 module.encoder.layer3.1.conv2.weight
	 module.encoder.layer3.1.bn2.weight
	 module.encoder.layer3.1.bn2.bias
	 module.encoder.layer3.1.conv3.weight
	 module.encoder.layer3.1.bn3.weight
	 module.encoder.layer3.1.bn3.bias
	 module.encoder.layer3.2.conv1.weight
	 module.encoder.layer3.2.bn1.weight
	 module.encoder.layer3.2.bn1.bias
	 module.encoder.layer3.2.conv2.weight
	 module.encoder.layer3.2.bn2.weight
	 module.encoder.layer3.2.bn2.bias
	 module.encoder.layer3.2.conv3.weight
	 module.encoder.layer3.2.bn3.weight
	 module.encoder.layer3.2.bn3.bias
	 module.encoder.layer3.3.conv1.weight
	 module.encoder.layer3.3.bn1.weight
	 module.encoder.layer3.3.bn1.bias
	 module.encoder.layer3.3.conv2.weight
	 module.encoder.layer3.3.bn2.weight
	 module.encoder.layer3.3.bn2.bias
	 module.encoder.layer3.3.conv3.weight
	 module.encoder.layer3.3.bn3.weight
	 module.encoder.layer3.3.bn3.bias
	 module.encoder.layer3.4.conv1.weight
	 module.encoder.layer3.4.bn1.weight
	 module.encoder.layer3.4.bn1.bias
	 module.encoder.layer3.4.conv2.weight
	 module.encoder.layer3.4.bn2.weight
	 module.encoder.layer3.4.bn2.bias
	 module.encoder.layer3.4.conv3.weight
	 module.encoder.layer3.4.bn3.weight
	 module.encoder.layer3.4.bn3.bias
	 module.encoder.layer3.5.conv1.weight
	 module.encoder.layer3.5.bn1.weight
	 module.encoder.layer3.5.bn1.bias
	 module.encoder.layer3.5.conv2.weight
	 module.encoder.layer3.5.bn2.weight
	 module.encoder.layer3.5.bn2.bias
	 module.encoder.layer3.5.conv3.weight
	 module.encoder.layer3.5.bn3.weight
	 module.encoder.layer3.5.bn3.bias
	 module.encoder.layer4.0.conv1.weight
	 module.encoder.layer4.0.bn1.weight
	 module.encoder.layer4.0.bn1.bias
	 module.encoder.layer4.0.conv2.weight
	 module.encoder.layer4.0.bn2.weight
	 module.encoder.layer4.0.bn2.bias
	 module.encoder.layer4.0.conv3.weight
	 module.encoder.layer4.0.bn3.weight
	 module.encoder.layer4.0.bn3.bias
	 module.encoder.layer4.0.downsample.0.weight
	 module.encoder.layer4.0.downsample.1.weight
	 module.encoder.layer4.0.downsample.1.bias
	 module.encoder.layer4.1.conv1.weight
	 module.encoder.layer4.1.bn1.weight
	 module.encoder.layer4.1.bn1.bias
	 module.encoder.layer4.1.conv2.weight
	 module.encoder.layer4.1.bn2.weight
	 module.encoder.layer4.1.bn2.bias
	 module.encoder.layer4.1.conv3.weight
	 module.encoder.layer4.1.bn3.weight
	 module.encoder.layer4.1.bn3.bias
	 module.encoder.layer4.2.conv1.weight
	 module.encoder.layer4.2.bn1.weight
	 module.encoder.layer4.2.bn1.bias
	 module.encoder.layer4.2.conv2.weight
	 module.encoder.layer4.2.bn2.weight
	 module.encoder.layer4.2.bn2.bias
	 module.encoder.layer4.2.conv3.weight
	 module.encoder.layer4.2.bn3.weight
	 module.encoder.layer4.2.bn3.bias
	 module.head.0.weight
	 module.head.0.bias
	 module.head.2.weight
	 module.head.2.bias
12
13
/home/knoviko/projects/DeepFashion/train_listfile.json
14
15
LENGTH TRAIN 15814
15814 2 256 7907 15814 0
7908 2 256 3954 7908 0
2 workers
Feature train len: 2
Feature train0 len: 1
Feature train1 len: 1
Feature feature_0 shape: <built-in method size of Tensor object at 0x2adf3f97f080>
Feature feature_1 shape: <built-in method size of Tensor object at 0x2adf3f97f080>
Feature batch shape: torch.Size([2, 1, 260, 3, 224, 224])
Labels batch shape: torch.Size([1, 260, 4])
dataloaders_dict1 train  <torch.utils.data.dataloader.DataLoader object at 0x2adf3b9a1850>
dataloaders_dict type <class 'torch.utils.data.dataloader.DataLoader'>
SAMPLER train  <data_processing.hierarchical_dataset.HierarchicalBatchSampler object at 0x2adf3b9a1f10>
SAMPLER train len  30
SAMPLER train number of samples   7907
SAMPLER train batch size   256
load_deep_fashion_hierarchical 
dataloaders_dict  {'train': <torch.utils.data.dataloader.DataLoader object at 0x2adf3b9a1b50>, 'val': <torch.utils.data.dataloader.DataLoader object at 0x2adf3b9a17f0>}
dataloaders_dict type <class 'dict'>
dataloaders_dict[train]  <torch.utils.data.dataloader.DataLoader object at 0x2adf3b9a1b50>
dataloaders_dict[train] type <class 'torch.utils.data.dataloader.DataLoader'>
Epoch 1/2
----------
idx  0
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.1636, -0.7971,  0.4542,  ...,  0.3237, -0.3319, -0.3448],
        [-0.2695, -0.8604,  0.2949,  ...,  0.3804, -0.1516, -0.2005],
        [-0.0630, -1.0587,  0.4535,  ...,  0.3525, -0.3067, -0.7325],
        ...,
        [-0.1722, -0.9969,  0.3923,  ...,  0.2840, -0.2254, -0.2653],
        [-0.1313, -0.8578,  0.4169,  ...,  0.3478, -0.3356, -0.4284],
        [-0.0682, -2.1893,  1.5107,  ...,  0.7339, -0.3570, -1.8565]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 9,  2, 14,  6, 13],
        [ 9, 14,  2,  6, 13],
        [ 2,  6, 14, 13,  9],
        ...,
        [ 2,  9,  6, 14, 13],
        [ 2, 14,  6,  9, 13],
        [ 6,  3,  2, 12,  7]], device='cuda:0')
pred shape: torch.Size([1040, 5])
Epoch: [1][ 0/30]	Time 35.804 (35.804)	Data 20.784 (20.784)	Loss 1.2752e+01 (1.2752e+01)	Acc@1  10.10 ( 10.10)	Acc@5  19.81 ( 19.81)
idx  1
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.1749, -1.0501,  0.5827,  ...,  0.3721, -0.2480, -0.4414],
        [ 0.0157, -1.0150,  0.6528,  ...,  0.3893, -0.0783, -0.6891],
        [-0.1094, -0.8647,  0.5366,  ...,  0.2957, -0.1882, -0.4071],
        ...,
        [-0.1121, -0.7712,  0.4833,  ...,  0.2757, -0.3249, -0.4912],
        [-0.2461, -0.9618,  0.3795,  ...,  0.3504, -0.3164, -0.3439],
        [ 0.0302, -0.9952,  0.8395,  ...,  0.1490, -0.0381, -0.7346]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2, 14,  6,  9, 13],
        [ 2,  6, 14, 13,  3],
        [ 2, 13,  6,  9, 14],
        ...,
        [ 2,  6, 13,  9, 14],
        [ 2,  9, 14, 13,  6],
        [ 6,  2,  3, 13,  7]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  2
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.2701, -0.8783,  0.3346,  ...,  0.3043, -0.1711, -0.3222],
        [-0.1975, -0.8266,  0.3151,  ...,  0.3435, -0.2238, -0.2437],
        [-0.1393, -0.9033,  0.4594,  ...,  0.3503, -0.3347, -0.3007],
        ...,
        [-0.0356, -0.9101,  0.4504,  ...,  0.2558, -0.2616, -0.4013],
        [ 0.0342, -0.9703,  0.6548,  ...,  0.1615, -0.2991, -0.4633],
        [-0.1624, -0.9403,  0.4990,  ...,  0.4680, -0.2402, -0.3204]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2, 13, 14,  9,  6],
        [ 9, 14, 13,  2,  6],
        [ 2,  9, 14,  6, 13],
        ...,
        [ 2,  6, 13, 14,  3],
        [ 2,  6,  9,  3, 14],
        [ 2, 14,  9,  6, 13]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  3
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.2762, -0.8452,  0.3881,  ...,  0.2007, -0.2693, -0.4126],
        [-0.0418, -1.0597,  0.6024,  ...,  0.2390, -0.1597, -0.5586],
        [-0.0582, -1.0429,  0.7988,  ...,  0.2376, -0.2763, -0.6443],
        ...,
        [-0.0788, -1.6162,  1.0621,  ...,  0.3163, -0.1164, -1.4171],
        [ 0.2496, -1.2698,  0.7854,  ...,  0.2385, -0.3053, -0.7536],
        [-0.0031, -1.2035,  1.0813,  ...,  0.3562, -0.4638, -0.8564]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2,  9, 13,  6, 14],
        [ 2,  6, 13, 14,  7],
        [ 2,  6,  9, 13, 14],
        ...,
        [ 2,  6,  3,  7, 12],
        [ 2,  6, 13,  3,  0],
        [ 2,  6, 14,  7, 13]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  4
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.2223, -1.0199,  0.7217,  ...,  0.1843, -0.3132, -0.4800],
        [-0.2249, -0.7666,  0.2975,  ...,  0.2820, -0.3673, -0.3095],
        [-0.0495, -0.7992,  0.5358,  ...,  0.3523, -0.2365, -0.3282],
        ...,
        [-0.2451, -0.7487,  0.3081,  ...,  0.3650, -0.0806, -0.3004],
        [-0.1539, -0.8452,  0.4739,  ...,  0.2570, -0.3081, -0.3590],
        [-0.0466, -0.8976,  0.5648,  ...,  0.3249, -0.0423, -0.3228]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2, 13,  6,  9, 14],
        [ 9, 13,  2,  6, 14],
        [ 2,  6, 14, 13,  9],
        ...,
        [ 9, 14,  6,  2, 13],
        [ 2,  9, 13,  6, 14],
        [ 2,  6, 14,  9, 10]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  5
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.0971, -0.8556,  0.3859,  ...,  0.2931, -0.2004, -0.1360],
        [-0.0267, -0.9964,  0.5588,  ...,  0.3709, -0.2365, -0.3270],
        [-0.0656, -1.1191,  0.7168,  ...,  0.3862, -0.1530, -0.5395],
        ...,
        [-0.1173, -0.7981,  0.4592,  ...,  0.2464, -0.2202, -0.4588],
        [-0.2097, -0.7853,  0.2577,  ...,  0.3509, -0.1296, -0.3680],
        [-0.1542, -0.8031,  0.3645,  ...,  0.3956, -0.1329, -0.2677]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2, 13,  9, 14,  6],
        [ 2, 14,  9,  6, 13],
        [ 2, 14,  6,  3, 13],
        ...,
        [ 2,  6, 13,  9, 14],
        [14, 13,  6,  9,  2],
        [ 9, 13, 14,  2,  6]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  6
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[ 0.1647, -1.3477,  0.8037,  ...,  0.2372, -0.1357, -0.6683],
        [-0.2422, -0.8704,  0.3406,  ...,  0.2398, -0.2913, -0.3983],
        [ 0.1476, -1.0322,  0.7084,  ...,  0.2568, -0.2797, -0.6076],
        ...,
        [-0.1931, -0.9303,  0.7976,  ...,  0.3164, -0.4088, -0.6824],
        [-0.1900, -0.9211,  0.3706,  ...,  0.4143, -0.3435, -0.4486],
        [-0.0488, -0.9333,  0.4024,  ...,  0.4117, -0.1910, -0.2390]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2,  6,  7, 14,  3],
        [ 9,  6,  2, 13, 14],
        [ 2,  6, 13,  3,  9],
        ...,
        [ 2,  6, 14, 13,  9],
        [ 6, 14,  2,  9, 13],
        [14,  2,  9, 13,  6]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  7
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[ 0.0060, -0.9322,  0.7179,  ...,  0.3343, -0.3361, -0.5282],
        [-0.3337, -1.0054,  0.3368,  ...,  0.2200, -0.2684, -0.4188],
        [-0.0875, -0.9543,  0.4351,  ...,  0.3677, -0.2423, -0.2743],
        ...,
        [-0.1999, -0.7561,  0.4096,  ...,  0.1957, -0.1526, -0.3029],
        [-0.3123, -0.9335,  0.3027,  ...,  0.4662, -0.3219, -0.2812],
        [ 0.0572, -1.4118,  1.1635,  ..., -0.0451, -0.5233, -0.9330]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2,  6, 13, 14,  7],
        [ 9,  2, 13,  6, 14],
        [ 9,  2, 14, 13,  6],
        ...,
        [ 9,  2,  6, 13, 14],
        [ 9, 14, 13,  2,  6],
        [ 2,  6,  3, 12, 13]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  8
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.1170, -0.8303,  0.4156,  ...,  0.3179, -0.0992, -0.3241],
        [-0.1451, -0.7872,  0.3866,  ...,  0.2653, -0.2200, -0.4942],
        [ 0.0973, -1.0504,  0.7419,  ...,  0.2455, -0.2840, -0.4327],
        ...,
        [-0.0700, -0.8610,  0.4938,  ...,  0.3066, -0.2789, -0.2364],
        [-0.1398, -0.8105,  0.3788,  ...,  0.2062, -0.2567, -0.3265],
        [-0.0988, -0.8987,  0.5226,  ...,  0.2619, -0.3076, -0.2981]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 9,  2, 13, 14,  6],
        [ 2,  9,  6, 13, 14],
        [ 2,  6,  3, 14, 13],
        ...,
        [ 2,  6,  9, 14, 13],
        [ 9,  2,  6, 13, 14],
        [ 2,  6,  9, 14, 13]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  9
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.0127, -1.2659,  0.8470,  ...,  0.3270, -0.3803, -0.8384],
        [-0.1753, -0.8710,  0.3213,  ...,  0.3869, -0.1399, -0.2826],
        [-0.1963, -0.8609,  0.2860,  ...,  0.2229, -0.1786, -0.2900],
        ...,
        [-0.1205, -0.8585,  0.5229,  ...,  0.3794, -0.2449, -0.3588],
        [-0.1480, -1.6955,  1.3875,  ...,  0.3758, -0.3374, -1.4123],
        [-0.1175, -1.1970,  0.4902,  ...,  0.3329, -0.2856, -0.4566]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2,  6,  3, 14, 13],
        [14,  9, 13,  2,  6],
        [ 9, 13,  2,  6, 14],
        ...,
        [ 2,  9,  6, 14, 13],
        [ 2,  6,  3, 12,  7],
        [ 2,  6, 14, 13,  9]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  10
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.1165, -0.9013,  0.3248,  ...,  0.4132, -0.0779, -0.1382],
        [-0.0747, -1.1104,  0.7380,  ...,  0.3698, -0.4270, -0.5717],
        [-0.0408, -1.1245,  0.9836,  ...,  0.4226, -0.1641, -0.7109],
        ...,
        [-0.0811, -0.8980,  0.5102,  ...,  0.3909, -0.2442, -0.4292],
        [-0.0792, -1.0468,  0.5894,  ...,  0.3030, -0.2742, -0.4426],
        [-0.0546, -0.8047,  0.3767,  ...,  0.3875, -0.1069, -0.3373]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[14,  6,  9,  2, 13],
        [ 2,  6, 14, 13,  9],
        [ 2,  6, 14, 13,  3],
        ...,
        [ 2,  6, 14,  9, 13],
        [ 2,  6, 14, 13,  9],
        [ 9, 14,  2, 13,  6]], device='cuda:0')
pred shape: torch.Size([1040, 5])
Epoch: [1][10/30]	Time  4.408 ( 7.013)	Data  0.306 ( 2.119)	Loss 1.2744e+01 (1.2756e+01)	Acc@1  10.00 (  9.69)	Acc@5  18.85 ( 19.42)
idx  11
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.1753, -1.2846,  1.1308,  ...,  0.2193, -0.3112, -0.7496],
        [-0.1665, -1.1692,  0.8745,  ...,  0.0248, -0.3141, -0.6586],
        [-0.0567, -1.0909,  0.9049,  ...,  0.3260, -0.1902, -0.4261],
        ...,
        [-0.1227, -0.7274,  0.3398,  ...,  0.3864, -0.0748, -0.2374],
        [-0.1973, -1.0710,  0.5742,  ...,  0.3248, -0.2774, -0.6341],
        [-0.0420, -0.8843,  0.3769,  ...,  0.4030, -0.1111, -0.2523]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2,  6,  3, 13, 12],
        [ 2,  6, 13,  3,  7],
        [ 2,  6,  3, 14, 13],
        ...,
        [14,  9,  2, 13,  6],
        [ 2,  6, 14, 13,  9],
        [14,  9, 13,  2,  6]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  12
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[ 0.1023, -0.9009,  0.4511,  ...,  0.3460, -0.0271, -0.1453],
        [-0.0472, -0.7816,  0.3652,  ...,  0.3390, -0.0422, -0.1704],
        [-0.0525, -0.9961,  0.7868,  ...,  0.2457, -0.4277, -0.4166],
        ...,
        [-0.0871, -0.9445,  0.4598,  ...,  0.3839, -0.0518, -0.2442],
        [ 0.0219, -0.8243,  0.4833,  ...,  0.3886, -0.1189, -0.1578],
        [-0.0461, -1.9662,  1.6539,  ...,  0.3131, -0.7227, -1.5185]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2, 13,  6, 14,  9],
        [ 9, 13,  2, 14,  6],
        [ 2,  6,  9, 13, 14],
        ...,
        [ 6,  2, 14,  9, 13],
        [ 2, 13,  6, 14,  9],
        [ 2, 12,  6,  3, 13]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  13
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.0656, -0.7433,  0.3288,  ...,  0.2845, -0.1889, -0.4075],
        [-0.1324, -1.4838,  1.0379,  ...,  0.2019, -0.4048, -0.9774],
        [-0.3999, -2.3567,  2.3362,  ..., -0.0441, -1.5937, -1.9678],
        ...,
        [-0.1278, -0.6885,  0.4811,  ...,  0.1401, -0.2221, -0.3733],
        [-0.0170, -0.9055,  0.3875,  ...,  0.3339, -0.2709, -0.2892],
        [-0.0208, -0.8639,  0.4007,  ...,  0.2747, -0.2508, -0.3155]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[13,  2,  9,  6, 14],
        [ 2,  6, 12, 13,  7],
        [ 2,  6, 12,  3,  7],
        ...,
        [ 2,  9, 13,  6, 14],
        [ 2, 14,  9,  6, 13],
        [ 6,  9,  2, 13, 14]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  14
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.1288, -0.6918,  0.3178,  ...,  0.3852, -0.1260, -0.1607],
        [-0.0905, -1.0526,  0.7692,  ...,  0.3355, -0.2427, -0.5013],
        [-0.1776, -1.0776,  0.8467,  ...,  0.3513, -0.4701, -0.7851],
        ...,
        [-0.0359, -1.0223,  0.6049,  ...,  0.1306, -0.3323, -0.5960],
        [ 0.0446, -0.9281,  0.5870,  ...,  0.3671, -0.0159, -0.1996],
        [-0.0866, -2.1408,  1.7067,  ...,  0.3347, -0.8871, -1.6958]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[14,  6, 13,  2,  9],
        [ 2,  6,  9, 14,  3],
        [ 2, 14,  6,  7,  9],
        ...,
        [ 2,  6,  9, 13, 14],
        [ 2,  6, 14,  9, 13],
        [ 2, 12,  6,  3,  7]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  15
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.1281, -0.7996,  0.2984,  ...,  0.3497,  0.0263, -0.2669],
        [-0.0023, -0.8697,  0.3969,  ...,  0.3564,  0.0132, -0.2394],
        [-0.0244, -1.0030,  0.5481,  ...,  0.3446, -0.1727, -0.4044],
        ...,
        [-0.0724, -0.9279,  0.4710,  ...,  0.3699, -0.1216, -0.2047],
        [-0.0229, -0.7359,  0.2300,  ...,  0.4482,  0.0735, -0.2662],
        [-0.1836, -1.1747,  0.7867,  ...,  0.3508, -0.2728, -0.3774]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[14,  9,  2,  6, 13],
        [13,  2, 14,  6,  9],
        [ 2,  6, 14, 13,  9],
        ...,
        [ 2,  6, 13, 14,  9],
        [14,  9, 13,  2,  6],
        [ 2,  6, 14, 13,  9]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  16
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[ 0.1760, -0.8374,  0.4834,  ...,  0.3703,  0.0461, -0.1707],
        [ 0.2361, -2.4481,  2.1465,  ...,  0.4462, -1.0888, -1.8283],
        [ 0.0344, -1.3465,  1.0531,  ...,  0.5912, -0.3206, -0.8395],
        ...,
        [-0.0685, -0.8480,  0.6355,  ...,  0.3418, -0.1635, -0.3650],
        [-0.1065, -0.7983,  0.5694,  ...,  0.3317, -0.1525, -0.2371],
        [-0.1579, -0.8443,  0.5634,  ...,  0.3057, -0.2499, -0.3370]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2,  6, 14, 13, 10],
        [ 2, 12,  6,  3, 14],
        [ 2,  6, 14, 13,  3],
        ...,
        [ 2,  6, 13, 14,  9],
        [ 2, 13,  9,  6, 14],
        [ 2,  9,  6, 14, 13]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  17
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.1061, -0.8178,  0.4494,  ...,  0.1915, -0.1888, -0.3122],
        [-0.0299, -1.1158,  0.6336,  ...,  0.2878, -0.2704, -0.3174],
        [ 0.0616, -0.9238,  0.4508,  ...,  0.4071,  0.0046, -0.2713],
        ...,
        [ 0.0465, -0.8922,  0.5198,  ...,  0.4071,  0.0068, -0.1607],
        [-0.0487, -0.9485,  0.5564,  ...,  0.4335, -0.1153, -0.5062],
        [-0.0132, -0.7248,  0.2701,  ...,  0.3018,  0.0075, -0.2521]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 9,  2,  6, 14, 13],
        [ 2,  6, 14, 13,  9],
        [ 2, 14,  6, 13,  9],
        ...,
        [ 2,  6, 14, 13,  9],
        [ 6,  2, 14,  9, 13],
        [13,  9, 14,  2,  6]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  18
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[ 0.2068, -1.5293,  1.2513,  ...,  0.2442, -0.4039, -0.6966],
        [-0.1381, -0.8963,  0.4943,  ...,  0.3774, -0.1619, -0.2883],
        [ 0.0877, -0.8074,  0.4223,  ...,  0.4323,  0.1491, -0.1200],
        ...,
        [-0.1296, -0.8259,  0.4420,  ...,  0.3662, -0.0679, -0.4378],
        [-0.0670, -1.0659,  0.4765,  ...,  0.0708, -0.4620, -0.5978],
        [ 0.1705, -1.7351,  1.0210,  ...,  0.1690, -0.5946, -0.9495]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2,  6,  3, 12, 13],
        [ 2, 13,  6, 14,  9],
        [ 6, 14, 13,  2,  9],
        ...,
        [ 2, 13, 14,  9,  6],
        [ 6,  2, 13,  9,  3],
        [ 2,  6, 13,  7,  3]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  19
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.2186, -0.8547,  0.4054,  ...,  0.3844, -0.3567, -0.6463],
        [-0.1231, -1.4628,  1.1353,  ...,  0.2328, -0.6108, -0.5924],
        [ 0.0854, -0.8727,  0.4134,  ...,  0.5130, -0.1215, -0.3613],
        ...,
        [-0.2073, -0.8867,  0.5339,  ...,  0.2986, -0.2370, -0.5955],
        [-0.1460, -0.7459,  0.4110,  ...,  0.3820, -0.0940, -0.2963],
        [ 0.0338, -0.9681,  0.7555,  ...,  0.2576, -0.3072, -0.7527]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2, 14,  9, 13,  6],
        [ 2,  6,  3, 12, 13],
        [14,  2,  6, 13,  9],
        ...,
        [ 2, 13,  9, 14,  3],
        [ 2, 14,  9, 13,  6],
        [ 2,  6,  9, 13, 14]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  20
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.1156, -1.3306,  0.7774,  ...,  0.3674, -0.2722, -0.8012],
        [-0.0787, -0.8860,  0.6249,  ...,  0.3387, -0.2266, -0.4246],
        [-0.1762, -1.2281,  0.9529,  ...,  0.2383, -0.4445, -0.8422],
        ...,
        [-0.5126, -0.9294,  0.7782,  ...,  0.1256, -0.5036, -0.8898],
        [ 0.0172, -0.8337,  0.5128,  ...,  0.3923,  0.0481, -0.2070],
        [-0.1938, -0.8418,  0.5158,  ...,  0.3541, -0.2082, -0.3361]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2,  6, 13, 14,  3],
        [ 2,  6, 14,  9, 13],
        [ 2,  6, 13, 14,  3],
        ...,
        [ 2,  6, 13,  3, 14],
        [ 2,  6, 14,  9, 10],
        [ 2, 13,  6, 14,  9]], device='cuda:0')
pred shape: torch.Size([1040, 5])
Epoch: [1][20/30]	Time  4.061 ( 5.636)	Data  0.189 ( 1.234)	Loss 1.2587e+01 (1.2705e+01)	Acc@1   9.13 (  9.95)	Acc@5  17.12 ( 19.47)
idx  21
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.0653, -1.0380,  0.4916,  ...,  0.4358, -0.1151, -0.5730],
        [ 0.0029, -2.1209,  2.2227,  ...,  0.0431, -1.2913, -1.1976],
        [-0.0568, -1.2807,  1.0000,  ...,  0.5292, -0.1987, -0.5379],
        ...,
        [-0.0471, -0.8845,  0.2461,  ...,  0.3699,  0.0894, -0.1929],
        [-0.2156, -0.8686,  0.4832,  ...,  0.3835, -0.1322, -0.3422],
        [ 0.2979, -1.4713,  1.0026,  ...,  0.4841, -0.1162, -0.6078]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2, 14, 13,  9,  6],
        [ 2,  6, 12,  3, 13],
        [ 2,  6, 14, 13,  3],
        ...,
        [ 9, 14,  6, 13,  2],
        [ 2,  6, 14,  9, 13],
        [ 2,  6, 13, 14,  3]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  22
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.0471, -0.8257,  0.3391,  ...,  0.3466, -0.1751, -0.3627],
        [-0.1500, -0.9013,  0.3897,  ...,  0.5315,  0.0104, -0.2409],
        [-0.2002, -1.2127,  0.8521,  ...,  0.2598, -0.3674, -0.5433],
        ...,
        [ 0.1402, -1.6638,  1.2254,  ...,  0.4420, -0.7029, -0.6057],
        [-0.0139, -0.9755,  0.5525,  ...,  0.3607, -0.1870, -0.3678],
        [ 0.1690, -1.3169,  0.8608,  ...,  0.5215, -0.2097, -0.3247]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 9, 13,  6, 14,  2],
        [14,  9,  2,  6, 13],
        [ 2,  6, 14, 13,  3],
        ...,
        [ 2,  6, 13, 14, 12],
        [ 2,  6, 13, 14,  9],
        [ 2,  6, 14, 13,  9]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  23
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.0958, -0.9603,  0.5319,  ...,  0.3677, -0.0697, -0.3427],
        [ 0.0368, -0.8372,  0.4858,  ...,  0.3266,  0.1405, -0.0455],
        [-0.1905, -0.8726,  0.4237,  ...,  0.3887, -0.0608, -0.5299],
        ...,
        [ 0.0545, -0.9685,  0.6252,  ...,  0.4052, -0.0225, -0.3699],
        [ 0.0559, -1.6585,  1.0513,  ...,  0.2144, -0.3828, -0.8682],
        [ 0.0557, -1.0325,  0.5486,  ...,  0.3925, -0.0551, -0.2727]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2, 13, 14,  6,  9],
        [ 6,  2, 13, 14,  9],
        [ 2, 14,  6, 13,  9],
        ...,
        [ 2, 13,  6, 14,  9],
        [ 2,  6, 12, 13,  3],
        [ 2, 14,  6, 13,  9]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  24
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[ 0.5587, -2.5822,  2.3102,  ..., -0.3213, -1.2987, -1.2628],
        [-0.1874, -0.7375,  0.5803,  ...,  0.3164, -0.3066, -0.4558],
        [-0.0220, -1.0600,  0.5305,  ...,  0.4738,  0.0428, -0.2463],
        ...,
        [-0.0806, -1.1826,  0.6482,  ...,  0.3174, -0.2629, -0.4696],
        [-0.1114, -0.9680,  0.6209,  ...,  0.3584, -0.1238, -0.2033],
        [-0.2753, -0.9762,  0.7929,  ...,  0.3283, -0.2360, -0.6368]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2, 12,  6,  0,  3],
        [ 2,  6, 13,  9, 14],
        [ 2,  9, 14,  6, 10],
        ...,
        [ 2,  6, 14,  9,  3],
        [ 2, 13, 14,  9,  6],
        [ 2, 14, 13,  6,  3]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  25
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[ 3.5319e-02, -8.1122e-01,  3.5269e-01,  ...,  4.3071e-01,
          1.1468e-02, -1.9544e-01],
        [-1.6064e-01, -8.0948e-01,  3.7538e-01,  ...,  4.1939e-01,
         -1.9765e-02, -1.2071e-01],
        [-1.4900e-01, -8.6089e-01,  7.2882e-01,  ...,  2.7102e-01,
         -1.3333e-01, -5.2461e-01],
        ...,
        [-2.6617e-01, -1.5236e+00,  1.2365e+00,  ...,  2.1484e-01,
         -6.4087e-01, -1.0689e+00],
        [ 6.0004e-04, -9.4043e-01,  6.1468e-01,  ...,  3.7026e-01,
         -1.2252e-01, -2.9227e-01],
        [-8.0275e-02, -1.1158e+00,  6.7998e-01,  ...,  3.7244e-01,
         -1.7310e-01, -3.7933e-01]], device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[14,  9,  6,  2, 13],
        [ 9,  6, 14,  2, 13],
        [ 2,  6, 13, 14,  3],
        ...,
        [ 2,  6,  3, 12, 14],
        [ 2, 14,  9, 13,  6],
        [ 2,  6,  9, 14, 13]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  26
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.6857, -1.2760,  1.3859,  ...,  0.3640, -0.5968, -1.5659],
        [-0.1047, -1.0374,  0.7646,  ...,  0.3343, -0.2549, -0.6631],
        [ 0.0917, -1.0038,  0.5320,  ...,  0.3437,  0.1542, -0.0882],
        ...,
        [-0.1996, -0.9851,  0.9210,  ...,  0.2821, -0.5579, -0.8986],
        [-0.1185, -1.1957,  0.8151,  ...,  0.1895, -0.2393, -0.3915],
        [ 0.1768, -0.9450,  0.5475,  ...,  0.3928,  0.1838, -0.1093]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2,  6,  3, 14,  7],
        [ 2, 13,  6,  3, 14],
        [ 2,  6, 13, 10,  9],
        ...,
        [ 2,  6, 13,  3, 14],
        [ 2,  9,  6, 14, 10],
        [ 2,  6, 14, 13, 10]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  27
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[ 0.0402, -1.0654,  0.6179,  ...,  0.3555, -0.0224, -0.4709],
        [ 0.0428, -0.9070,  0.2461,  ...,  0.3809,  0.0497, -0.2777],
        [-0.2105, -0.9747,  0.5753,  ...,  0.3850, -0.2776, -0.4500],
        ...,
        [ 0.0427, -0.9367,  0.4521,  ...,  0.3036,  0.1043, -0.1689],
        [-0.0014, -0.9592,  0.5756,  ...,  0.2765,  0.0544, -0.2951],
        [-0.1359, -0.9028,  0.5778,  ...,  0.4579, -0.1529, -0.4466]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2,  6, 14, 13, 10],
        [13, 14,  6,  9,  2],
        [ 2, 13,  9, 14,  6],
        ...,
        [ 6,  2, 13, 14, 10],
        [ 2, 13,  6,  9, 14],
        [ 2, 14,  6, 13,  3]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  28
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.0457, -0.9416,  0.4241,  ...,  0.4481, -0.0146, -0.3035],
        [-0.1009, -1.3981,  0.9348,  ...,  0.2547, -0.2123, -0.4610],
        [ 0.0444, -1.4921,  0.9238,  ...,  0.2706, -0.4310, -0.5971],
        ...,
        [ 0.1823, -1.2426,  0.7722,  ...,  0.2680, -0.1168, -0.4184],
        [ 0.0992, -1.3105,  0.7424,  ...,  0.4394, -0.2680, -0.2977],
        [-0.0264, -1.1710,  0.5872,  ...,  0.4674, -0.0383, -0.4122]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[14,  2, 13,  9,  6],
        [ 2,  6,  9, 14, 13],
        [ 2,  6, 13,  9, 14],
        ...,
        [ 2,  6, 13, 14,  9],
        [ 2,  6, 14, 13,  9],
        [ 2,  6, 14, 13,  9]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  29
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[ 0.0214, -1.5368,  0.8950,  ...,  0.2539, -0.1728, -0.6822],
        [-0.4761, -1.3970,  0.9124,  ...,  0.2081, -0.6951, -0.9744],
        [-0.0627, -1.4570,  1.0349,  ...,  0.1734, -0.4018, -0.8713],
        ...,
        [-0.0066, -0.9911,  0.4639,  ...,  0.4985,  0.1550, -0.0644],
        [-0.0533, -1.1531,  0.6314,  ...,  0.4014, -0.1854, -0.4728],
        [-0.4549, -1.7231,  1.4563,  ...,  0.2253, -0.7724, -1.1471]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2,  6,  9, 14, 13],
        [ 2,  6,  3,  7, 12],
        [ 2,  6,  7, 12, 13],
        ...,
        [13, 14,  2,  9,  6],
        [ 2,  6, 14,  3, 10],
        [ 2,  6, 12,  3,  7]], device='cuda:0')
pred shape: torch.Size([1040, 5])
idx  30
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[-0.1270, -0.8498,  0.5194,  ...,  0.3090, -0.1807, -0.3441],
        [ 0.1022, -1.0586,  0.4497,  ...,  0.4432,  0.0321, -0.3842],
        [-0.1278, -1.0353,  0.6573,  ...,  0.3692, -0.2825, -0.5994],
        ...,
        [-0.1560, -1.1088,  0.8079,  ...,  0.3750, -0.2989, -0.6651],
        [-0.0441, -1.0571,  0.4490,  ...,  0.3294,  0.0038, -0.5400],
        [-0.7714, -1.3375,  1.0692,  ...,  0.3078, -0.3638, -1.0913]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2,  6, 13,  9, 14],
        [13,  2, 14,  6,  9],
        [ 2,  9,  6, 14, 13],
        ...,
        [ 2,  6, 13, 14,  3],
        [ 6,  2, 13,  3, 14],
        [ 2,  6,  3, 12, 14]], device='cuda:0')
pred shape: torch.Size([1040, 5])
Epoch: [1][30/30]	Time  3.619 ( 5.136)	Data  0.000 ( 0.911)	Loss 1.2354e+01 (1.2613e+01)	Acc@1   9.04 (  9.91)	Acc@5  16.54 ( 19.20)
idx  31
images len   2
train images0 shape:  torch.Size([2, 1, 260, 3, 224, 224])
train images_2 shape:  torch.Size([4, 1, 260, 3, 224, 224])
images_2 len   4
labels len   1
train labless0 shape:  torch.Size([1, 260, 4])
train images shape:  torch.Size([520, 3, 224, 224])
train images_2 shape (after cat):  torch.Size([1040, 3, 224, 224])
train features0 shape:  torch.Size([520, 128])
train features_2 shape:  torch.Size([1040, 2048])
train labels shape:  torch.Size([260, 4])
train features2 shape:  torch.Size([1040, 2048])
train labels2 shape:  torch.Size([1040])
train output shape:  torch.Size([1040, 17])
output  tensor([[ 0.2650, -1.2029,  0.7168,  ...,  0.3563, -0.2815, -0.5311],
        [-0.3098, -1.0546,  0.6920,  ...,  0.3959, -0.2439, -0.5308],
        [ 0.1747, -1.3642,  0.8917,  ...,  0.2747, -0.2056, -0.5095],
        ...,
        [-0.0786, -0.9765,  0.6441,  ...,  0.3098, -0.1077, -0.3180],
        [ 0.1304, -1.0004,  0.5360,  ...,  0.5355,  0.0566, -0.2197],
        [-0.0511, -1.0560,  0.6131,  ...,  0.3961, -0.0802, -0.3255]],
       device='cuda:0', grad_fn=<AddmmBackward>)
output shape2: torch.Size([1040, 17])
pred  tensor([[ 2, 13,  6, 14,  9],
        [ 2, 13,  6, 14,  9],
        [ 2,  6, 13, 14,  0],
        ...,
        [ 2,  6,  9, 13, 14],
        [ 2, 14, 13,  6,  9],
        [ 2,  6, 14,  9, 13]], device='cuda:0')
pred shape: torch.Size([1040, 5])
